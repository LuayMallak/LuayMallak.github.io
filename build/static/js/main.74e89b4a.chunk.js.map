{"version":3,"sources":["Components/Home.js","Components/Portfolio.js","Components/AboutMe.js","Components/ContactMe.js","Components/headerElements/Nav.js","Components/headerElements/SocialLinks.js","Components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","id","Portfolio","AboutMe","ContactMe","Nav","href","SocialLinks","target","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qOACe,SAASA,IACtB,OACE,oCACE,yBAAKC,UAAU,OAAOC,GAAG,QAAzB,SCHS,SAASC,IACtB,OACE,oCACE,yBAAKF,UAAU,YAAYC,GAAG,aAA9B,cCHS,SAASE,IACtB,OACE,oCACE,yBAAKH,UAAU,UAAUC,GAAG,YAA5B,aCHS,SAASG,IACtB,OACE,oCACE,yBAAKJ,UAAU,YAAYC,GAAG,cAA9B,eCDS,SAASI,IACtB,OACE,oCACE,yBAAKL,UAAU,OACb,wBAAIA,UAAU,WACZ,wBAAIA,UAAU,WACZ,uBAAGM,KAAK,SAAR,WAEF,wBAAIN,UAAU,WACZ,uBAAGM,KAAK,cAAR,gBAEF,wBAAIN,UAAU,WACZ,uBAAGM,KAAK,aAAR,cAEF,wBAAIN,UAAU,WACZ,uBAAGM,KAAK,eAAR,mBChBG,SAASC,IACtB,OACE,oCACE,yBAAKP,UAAU,eACb,wBAAIA,UAAU,cACZ,wBAAIA,UAAU,cACZ,uBAAGM,KAAK,uCAAuCE,OAAO,UAAtD,aAIF,wBAAIR,UAAU,cACZ,uBACEM,KAAK,oDACLE,OAAO,UAFT,aAOF,wBAAIR,UAAU,cACZ,uBAAGM,KAAK,gCAAgCE,OAAO,UAA/C,WAIF,wBAAIR,UAAU,cACZ,uBAAGM,KAAK,yCAAyCE,OAAO,UAAxD,iBCtBG,SAASC,IACtB,OACE,oCACE,yBAAKT,UAAU,UACb,kBAACK,EAAD,MACA,kBAACE,EAAD,Q,MCeOG,MAdf,WACE,OACE,yBAAKV,UAAU,OACb,kBAACD,EAAD,MACA,0BAAMC,UAAU,QACd,kBAACS,EAAD,MACA,kBAACP,EAAD,MACA,kBAACC,EAAD,MACA,kBAACC,EAAD,SCNYO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.74e89b4a.chunk.js","sourcesContent":["import React from \"react\";\nexport default function Home() {\n  return (\n    <>\n      <div className=\"home\" id=\"home\">\n        Home\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nexport default function Portfolio() {\n  return (\n    <>\n      <div className=\"portfolio\" id=\"portfolio\">\n        Portfolio\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nexport default function AboutMe() {\n  return (\n    <>\n      <div className=\"aboutMe\" id=\"about-me\">\n        About Me\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nexport default function ContactMe() {\n  return (\n    <>\n      <div className=\"contactMe\" id=\"contact-me\">\n        Contact Me\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function Nav() {\n  return (\n    <>\n      <nav className=\"nav\">\n        <ul className=\"navList\">\n          <li className=\"navLink\">\n            <a href=\"#home\"> Home </a>\n          </li>\n          <li className=\"navLink\">\n            <a href=\"#portfolio\"> Portfolio </a>\n          </li>\n          <li className=\"navLink\">\n            <a href=\"#about-me\"> AboutMe </a>\n          </li>\n          <li className=\"navLink\">\n            <a href=\"#contact-me\"> ContactMe </a>\n          </li>\n        </ul>\n      </nav>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function SocialLinks() {\n  return (\n    <>\n      <div className=\"socialLinks\">\n        <ul className=\"socialList\">\n          <li className=\"socialLink\">\n            <a href=\"https://www.facebook.com/mallak.luay\" target=\"_blank\">\n              Facebook\n            </a>\n          </li>\n          <li className=\"socialLink\">\n            <a\n              href=\"https://www.linkedin.com/in/luay-mallak-7a942bb8/\"\n              target=\"_blank\"\n            >\n              LinkedIn\n            </a>\n          </li>\n          <li className=\"socialLink\">\n            <a href=\"https://github.com/LuayMallak\" target=\"_blank\">\n              GitHub\n            </a>\n          </li>\n          <li className=\"socialLink\">\n            <a href=\"https://www.instagram.com/luay.mallak/\" target=\"_blank\">\n              Instagram\n            </a>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport Nav from \"./headerElements/Nav\";\nimport SocialLinks from \"./headerElements/SocialLinks\";\n\nexport default function Header() {\n  return (\n    <>\n      <div className=\"header\">\n        <Nav />\n        <SocialLinks />\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport Portfolio from \"./Components/Portfolio\";\nimport AboutMe from \"./Components/AboutMe\";\nimport ContactMe from \"./Components/ContactMe\";\nimport Header from \"./Components/Header\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n      <main className=\"main\">\n        <Header />\n        <Portfolio />\n        <AboutMe />\n        <ContactMe />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}